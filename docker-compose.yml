version: "3.8"

services:
  rabbitmq:
    image: rabbitmq:3.12.14-management-alpine
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_VHOST: "app"
      RABBITMQ_DEFAULT_USER: "admin"
      RABBITMQ_DEFAULT_PASS: "admin"
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - default
  redis:
    image: redis:7.2.4-alpine
    volumes:
      - redis:/data
    ports:
      - "6379:6379"
    networks:
      - default
  postgres:
    image: postgres:16.2-alpine
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: "db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "5432:5432"
    networks:
      - default
  pgb:
    image: ssa17021992/pgb:1.20
    environment:
      POOL_SIZE: "1"
      CONNECTIONS: "1000"
      DB_HOST: "postgres"
      DB_NAME: "db"
      PG_USER: "postgres"
      PG_PASSWORD: "postgres"
      STATS_USER: "pgb_stats"
      STATS_PASSWORD: "pgb_stats"
    ports:
      - "6432:6432"
    networks:
      - default
  shell:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    environment:
      ENV: "shell"
    env_file:
      - .docker/dev/.env
    networks:
      - default
    depends_on:
      - postgres
      - redis
      - rabbitmq
  uwsgi:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    environment:
      ENV: "web + migrate"
    env_file:
      - .docker/dev/.env
    ports:
      - "2000:80"
    networks:
      - default
    depends_on:
      - postgres
      - redis
      - rabbitmq
  dev:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    environment:
      ENV: "dev + migrate"
    env_file:
      - .docker/dev/.env
    ports:
      - "8000:80"
    networks:
      - default
    depends_on:
      - postgres
      - redis
      - rabbitmq
  web:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      ENV: "web + migrate"
      DEBUG: "False"
      DB_HOST: "pgb"
      DB_PORT: "6432"
    env_file:
      - .docker/dev/.env
    ports:
      - "80:80"
    networks:
      - default
    depends_on:
      - postgres
      - redis
      - rabbitmq
      - pgb
  ws:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    environment:
      ENV: "ws + migrate"
    env_file:
      - .docker/dev/.env
    ports:
      - "3000:80"
    networks:
      - default
    depends_on:
      - postgres
      - redis
      - rabbitmq
  task:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    environment:
      ENV: "task + migrate"
    env_file:
      - .docker/dev/.env
    networks:
      - default
    depends_on:
      - postgres
      - redis
      - rabbitmq
  beat:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    environment:
      ENV: "beat"
    env_file:
      - .docker/dev/.env
    networks:
      - default
    depends_on:
      - postgres
      - redis
      - rabbitmq
  test:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    environment:
      ENV: "test"
    env_file:
      - .docker/dev/.env
    networks:
      - default
    depends_on:
      - postgres
      - redis
      - rabbitmq
  test-image:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      ENV: "test"
    env_file:
      - .docker/dev/.env
    networks:
      - default
    depends_on:
      - postgres
      - redis
      - rabbitmq

networks:
  default:

volumes:
  rabbitmq:
  redis:
  postgres:
